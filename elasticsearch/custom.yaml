clusterName: "developersitalia"

imageTag: "6.8.7"

esConfig:
  elasticsearch.yml: |
    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.verification_mode: certificate
    xpack.security.transport.ssl.keystore.type: PKCS12
    xpack.security.transport.ssl.keystore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
    xpack.security.transport.ssl.truststore.type: PKCS12
    xpack.security.transport.ssl.truststore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
    xpack.security.authc:
      anonymous:
        username: anonymous_user
        roles: readonly
        authz_exception: true
    xpack.monitoring.enabled: false
    xpack.watcher.enabled: false
    xpack.ml.enabled: false
    http.cors.enabled: true
    http.cors.allow-origin: "*"
    http.cors.allow-methods: OPTIONS, HEAD, GET, POST, PUT, DELETE
    http.cors.allow-headers: X-Requested-With,X-Auth-Token,Content-Type,Content-Length
    logger.level: debug
  roles.yml : |
    readonly:
      run_as: [ 'elastic' ]
      cluster: [ 'monitor' ]
      indices:
        - names: [ 'indicepa_pec' ]
          privileges: [ 'read' ]
  log4j2.properties: |
    status = error
    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] [%node_name]%marker %m%n
    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console

antiAffinity: soft

persistence:
  enabled: false

secretMounts:
  - name: elastic-certificates
    secretName: elasticsearch-secrets-certs
    path: /usr/share/elasticsearch/config/certs

extraEnvs:
  - name: ELASTIC_USERNAME
    valueFrom:
      secretKeyRef:
        name: elasticsearch-secrets
        key: username
  - name: ELASTIC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: elasticsearch-secrets
        key: password

ingress:
    enabled: "true"
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      cert-manager.io/acme-challenge-type: http01
    hosts:
      - elastic.developers.italia.it
    path: /
    tls:
      - hosts:
          - elastic.developers.italia.it
        secretName: elasticsearch-prod-tls
